/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/chains": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              chains?: {
                  id?: number;
                  name?: string;
                  displayName?: string;
                  httpRpcUrl?: string;
                  wsRpcUrl?: string;
                  explorerUrl?: string;
                  explorerName?: string;
                  depositEnabled?: boolean;
                  currency?: {
                    symbol?: string;
                    name?: string;
                    decimals?: number;
                  };
                }[];
            };
          };
        };
      };
    };
  };
  "/chains/add": {
    post: {
      parameters: {
        header: {
          "x-admin-api-key": string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            id: number;
            name: string;
            httpRpcUrl: string;
            wsRpcUrl: string;
            targetBalance: string;
            capacityPerRequest: string;
            feeBpsPrice?: string;
            stack?: string;
            httpRpcUrlPublic: string;
            wsRpcUrlPublic: string;
            explorerUrl: string;
            explorerName: string;
            displayName: string;
            depositAddress?: string;
            baseChainId?: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              message?: string;
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              message?: string;
            };
          };
        };
        /** @description Default Response */
        401: {
          content: {
            "application/json": {
              message?: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          content: {
            "application/json": {
              message?: string;
            };
          };
        };
      };
    };
  };
  "/chains/update": {
    post: {
      parameters: {
        header: {
          "x-admin-api-key": string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            id: number;
            name?: string;
            httpRpcUrl?: string;
            wsRpcUrl?: string;
            targetBalance?: string;
            capacityPerRequest?: string;
            feeBpsPrice?: string;
            stack?: string;
            httpRpcUrlPublic?: string;
            wsRpcUrlPublic?: string;
            explorerUrl?: string;
            explorerName?: string;
            displayName?: string;
            depositAddress?: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              message?: string;
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              message?: string;
            };
          };
        };
        /** @description Default Response */
        401: {
          content: {
            "application/json": {
              message?: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          content: {
            "application/json": {
              message?: string;
            };
          };
        };
      };
    };
  };
  "/config": {
    get: {
      parameters: {
        query?: {
          originChainId?: string;
          destinationChainId?: string;
          user?: string;
          currency?: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              enabled?: boolean;
              user?: {
                balance?: string;
              };
              solver?: {
                address?: string;
                balance?: string;
                capacityPerRequest?: string;
              };
            };
          };
        };
      };
    };
  };
  "/execute/call": {
    post: {
      requestBody: {
        content: {
          "application/json": {
            user: string;
            originChainId: number;
            destinationChainId: number;
            txs?: {
                to?: string;
                value?: string;
                data?: string;
              }[];
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              steps?: {
                  id?: string;
                  action?: string;
                  description?: string;
                  kind?: string;
                  items?: {
                      status?: string;
                      data?: unknown;
                      check?: {
                        endpoint?: string;
                        method?: string;
                      };
                    }[];
                }[];
              fees?: {
                gas?: string;
                relayer?: string;
                relayerGas?: string;
                relayerService?: string;
              };
              timeEstimate?: number;
              balances?: {
                userBalance?: string;
                requiredToSolve?: string;
              };
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              message?: string;
            };
          };
        };
        /** @description Default Response */
        401: {
          content: {
            "application/json": {
              message?: string;
            };
          };
        };
        /** @description Default Response */
        500: {
          content: {
            "application/json": {
              message?: string;
            };
          };
        };
      };
    };
  };
  "/lives": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              message?: string;
            };
          };
        };
      };
    };
  };
  "/intents/status": {
    get: {
      parameters: {
        query?: {
          requestId?: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              status?: string;
              details?: string;
              txHashes?: string[];
              time?: number;
              originChainId?: number;
              destinationChainId?: number;
            };
          };
        };
      };
    };
  };
  "/intents/quote": {
    post: {
      requestBody: {
        content: {
          "application/json": {
            request: Record<string, never>;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              requestId?: string;
              shortRequestId?: string;
              price?: string;
              relayerFee?: string;
              depositGasFee?: string;
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              message?: string;
            };
          };
        };
      };
    };
  };
  "/intents/trigger": {
    post: {
      requestBody?: {
        content: {
          "application/json": {
            request?: Record<string, never>;
            signature?: string;
            tx?: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              message?: string;
              requestId?: string;
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              message?: string;
            };
          };
        };
      };
    };
  };
  "/requests": {
    get: {
      parameters: {
        query?: {
          limit?: string;
          continuation?: string;
          user?: string;
          hash?: string;
          originChainId?: string;
          destinationChainId?: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              requests?: {
                  id?: string;
                  status?: string;
                  user?: string;
                  data?: {
                    fees?: {
                      gas?: string;
                      fixed?: string;
                      price?: string;
                    };
                    feesUsd?: {
                      gas?: string;
                      fixed?: string;
                      price?: string;
                    };
                    inTxs?: {
                        fee?: string;
                        data?: {
                          to?: string;
                          data?: string;
                          from?: string;
                          value?: string;
                        };
                        hash?: string;
                        type?: string;
                        chainId?: number;
                        timestamp?: number;
                      }[];
                    price?: string;
                    outTxs?: {
                        fee?: string;
                        data?: {
                          to?: string;
                          data?: string;
                          from?: string;
                          value?: string;
                        };
                        hash?: string;
                        type?: string;
                        chainId?: number;
                        timestamp?: number;
                      }[];
                  };
                  createdAt?: string;
                  updatedAt?: string;
                }[];
              continuation?: string;
            };
          };
        };
      };
    };
  };
  "/transactions/index": {
    post: {
      requestBody: {
        content: {
          "application/json": {
            chainId: string;
            block: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              message?: string;
            };
          };
        };
      };
    };
  };
  "/transactions/status": {
    get: {
      parameters: {
        query?: {
          chainId?: string;
          hash?: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              status?: string;
            };
          };
        };
        /** @description Default Response */
        404: {
          content: {
            "application/json": {
              status?: string;
            };
          };
        };
      };
    };
  };
  "/users/balance": {
    get: {
      parameters: {
        query?: {
          user?: string;
          currency?: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              balance?: string;
            };
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
